{"version":3,"sources":["webpack://zMultiCache/webpack/universalModuleDefinition","webpack://zMultiCache/webpack/bootstrap","webpack://zMultiCache/./src/index.js","webpack://zMultiCache/./src/storages/index.js","webpack://zMultiCache/./src/storages/memoryStorage.js","webpack://zMultiCache/./src/store.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","_store__WEBPACK_IMPORTED_MODULE_0__","originStorageMap","localStorage","sessionStorage","memoryStorage","storagesList","keys","storagesListStr","join","storagesMap","reduce","map","item","checkStorageType","type","Error","concat","getStoreByStoreKey","storeKey","val","getItem","JSON","parse","setStoreByStoreKey","storeVal","errCallBack","valStr","stringify","setItem","e","Storage","_classCallCheck","this","_createClass","itemKey","store","MemoryStorage","_defineProperty","storage","String","NAMESPACE_PREFIX","DEFAULT_PAGE","DEFAULT_STORAGE_TYPE","noop","getType","obj","toString","slice","toLocaleLowerCase","strictCheck","strict","template","page","isGlobalStore","globalKeys","some","pages","checkParams","_ref","getPageAndItemKey","scope","separator","idx","replace","indexOf","hasSeparator","trim","keyPrefix","substr","length","config","arguments","undefined","_config$ns","_config$strict","_config$template","_config$scopeSeparato","scopeSeparator","isSimpleObject","partialStoreKey","opts","_opts$type","_opts$scope","_opts$errCallBack","_getPageAndItemKey","_getPageAndItemKey$pa","_opts$type2","_opts$scope2","defaultValue","_getPageAndItemKey2","_getPageAndItemKey2$p","_readOnlyError","removeItem","_opts$type3","_opts$scope3","_getPageAndItemKey3","_getPageAndItemKey3$p","clear","_opts$type4","_opts$scope4","_getPageAndItemKey4","_getPageAndItemKey4$p","types"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"zMultiCache\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"zMultiCache\"] = factory();\n\telse\n\t\troot[\"zMultiCache\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","export * from './store';","import memoryStorage from \"./memoryStorage\";\n\nconst originStorageMap = {\n    localStorage: localStorage,\n    sessionStorage: sessionStorage,\n    memoryStorage: memoryStorage\n};\n\nexport const storagesList = Object.keys(originStorageMap);\nconst storagesListStr = storagesList.join(', ');\nexport const storagesMap = storagesList.reduce((map, item) => {\n    map[item] = item;\n    return map;\n}, {});\n\n/**\n * check if the type is exist.\n *\n * @param {*} type\n */\nfunction checkStorageType(type) {\n    if(!storagesMap[type]) {\n        throw new Error(`type should be one of: ${storagesListStr}, your value is: ${type}`);\n    }\n}\n\n/**\n * get the value from storage(such as localStorage) according to the fields: type, storeKey\n *\n * @param {*} type the type used to store the value\n * @param {*} storeKey store key\n * @returns store item value\n */\nfunction getStoreByStoreKey(type, storeKey) {\n    checkStorageType(type);\n    const val = originStorageMap[type].getItem(storeKey);\n    return JSON.parse(val) || {};\n}\n\n/**\n * set the value into storage(such as localStorage) according to the fields: type, storeKey, storeVal\n *\n * @param {*} type the type used to store the value\n * @param {*} storeKey store key\n * @param {*} storeVal store value\n * @param {*} errCallBack error callback\n */\nfunction setStoreByStoreKey(type, storeKey, storeVal, errCallBack) {\n    checkStorageType(type);\n    try {\n        const valStr = JSON.stringify(storeVal);\n        originStorageMap[type].setItem(storeKey, valStr);\n    } catch (e) {\n        errCallBack && errCallBack(e);\n    }\n}\n\n/**\n * Use 'Storage' to manage sessionStorage, localStorage, memoryStorage\n *\n * @export Storage\n * @class Storage\n */\nexport class Storage {\n    /**\n     * set item. if you use localStorage:\n     * const s = new Storage();\n     * s.setItem('localStorage', 'storeKey', 'itemKey', 'the value', null);\n     *  =>\n     * localStorage.setItem('storeKey', '{\"itemKey\":\"the value\"}');\n     *\n     * @param {*} type the type used to store the value, such as sessionStorage\n     * @param {*} storeKey sessionStorage.setItem('theStoreKey', '{\"theItemKey\":\"the value\"}'), here storeKey is \"theStoreKey\"\n     * @param {*} itemKey as above, itemKey is \"theItemKey\"\n     * @param {*} val as above, val is \"the value\"\n     * @param {*} errCallBack\n     * @memberof Storage\n     */\n    setItem(type, storeKey, itemKey, val, errCallBack) {\n        const store = getStoreByStoreKey(type, storeKey);\n        store[itemKey] = val;\n        setStoreByStoreKey(type, storeKey, store, errCallBack);\n    }\n\n    /**\n     * get item.\n     *\n     * @param {*} type the type used to store the value\n     * @param {*} storeKey store key\n     * @param {*} itemKey item key\n     * @returns item value\n     * @memberof Storage\n     */\n    getItem(type, storeKey, itemKey) {\n        const store = getStoreByStoreKey(type, storeKey);\n        return store[itemKey];\n    }\n\n    /**\n     * remove item from storage according to the fileds: type, storeKey, itemKey\n     *\n     * @param {*} type the type used to store the value\n     * @param {*} storeKey store key\n     * @param {*} itemKey item key\n     * @memberof Storage\n     */\n    removeItem(type, storeKey, itemKey) {\n        const store = getStoreByStoreKey(type, storeKey);\n        delete store[itemKey];\n        setStoreByStoreKey(type, storeKey, itemKey);\n    }\n\n    /**\n     * clear the storage\n     *\n     * @param {*} type the type used to store the value\n     * @param {*} storeKey store key\n     * @memberof Storage\n     */\n    clear(type, storeKey) {\n        setStoreByStoreKey(type, storeKey, {});\n    }\n}\n\nconst store = new Storage();\nexport default store;\n","/**\n * realize a memoryStorage with the same api as localStorage or sessionStorage.\n *\n * @export\n * @class MemoryStorage\n */\nexport class MemoryStorage {\n    storage = {};\n\n    setItem(key, value) {\n        this.storage[key] = String(value);\n    }\n\n    getItem(key) {\n        return this.storage[key] || null;\n    }\n\n    removeItem(key) {\n        delete this.storage[key];\n    }\n    \n    clear() {\n        this.storage = {};\n    }\n}\n\nconst memoryStorage = new MemoryStorage();\n\nexport default memoryStorage;","import storage, { storagesMap, storagesList } from '@storages/index';\nconst NAMESPACE_PREFIX = '$zMultiCachePrefix$';\nconst DEFAULT_PAGE = '$page$';\nconst DEFAULT_STORAGE_TYPE = storagesMap.sessionStorage;\nconst noop = function() {};\nconst storagesListStr = storagesList.join(', ');\n\n/**\n * get type of the parameter.\n *\n * @param {*} obj\n * @returns type\n */\nfunction getType(obj) {\n    return Object.prototype.toString.call(obj).slice(8, -1).toLocaleLowerCase();\n}\n\n/**\n * judge if the input is a simple object.\n *\n * @param {*} obj\n * @returns\n */\nfunction isSimpleObject(obj) {\n    return getType(obj) !== 'object' ? false : true;\n}\n\nfunction strictCheck(strict, template, page, itemKey) {\n    if (!strict) {\n        return; \n    }\n    if (isGlobalStore(page)) {\n        const { globalKeys } = template;\n        if (getType(globalKeys) !== 'array') {\n            throw new Error('globalKeys need to be an array.');\n        }\n        if (!globalKeys.some((item) => {\n            return item === itemKey;\n        })) {\n            throw new Error(`key \"${itemKey}\" should be defined in globalKeys firstly.`);\n        }\n    } else {\n        const { pages } = template;\n        if (getType(pages) !== 'array') {\n            throw new Error('pages need to be an array.');\n        }\n        if (!pages.some((item) => {\n            return item === page;\n        })) {\n            throw new Error(`the page part of scope \"${page}\" should be defined in pages firstly.`);\n        }\n    }\n}\n\nfunction checkParams({ type }) {\n    if (!storagesMap[type]) {\n        throw new Error(`type should be one of: ${storagesListStr}, your value is: ${type}`);\n    }\n    return true;\n}\n\nfunction isGlobalStore(page) {\n    return page === 'global';\n}\n\n/**\n * parse page and itemKey from scope and key.\n *\n * @param {*} scope\n * @param {*} key\n * @param {*} separator\n * @returns\n */\nfunction getPageAndItemKey(scope, key, separator) {\n    if (typeof scope !== 'string') {\n        throw new Error('scope need to be a string.');\n    }\n    // scope = scope.replace(/^(\\s*)\\/?(\\s*)|(\\s*)\\/?(\\s*)$/g, '');\n    scope = scope.replace(/\\s*\\/?\\s*$/g, '');\n    const idx = scope.indexOf(separator);\n    const hasSeparator = idx !== -1;\n    const page = scope.slice(0, hasSeparator ? idx : void 0).trim();\n    let keyPrefix = scope.substr(hasSeparator ? idx + separator.length : scope.length).trim();\n    keyPrefix = keyPrefix.length ? `${keyPrefix}>` : `${keyPrefix}`;\n    const itemKey = isGlobalStore(page) ? `${key}` : `${keyPrefix}${key}`;\n    return {\n        page: page || void 0, // 如果page为''则返回void 0，是为了方便后面处理默认值\n        itemKey\n    }\n}\n\n/**\n * provide the ability to create a store with some config.\n * \n * @api factory\n * @export\n * @param {*} [config={\n *  ns: '$ns$', // namespace, default \"$ns$\".you can set a ns in a new project, then the data stored in sessionStorage or localStorage will not cover the data from other projects. \n *  scopeSeparator: '/', // separator in scope string. when you do: store.set({scope:'homePage/flightPart', key:'city', value: 'beijing'}); the key use \"/\" to distinguish each part.\n *  strict: true, // it represents whether to use strict mode.\n *  template: { // if you use strict mode. when you set or get Data. store will validate data according to the template config.\n *      globalKeys: [], // if you do: store.set({scope: 'global', key: 'city', value: 'beijing'}), if the scope is global, the key will be checked whther it is defined in globalKeys.\n *      pages: [] // if scope is not global and in strict mode. the scope will be checked whther it is defined in pages. for example. store.set({scope: 'home/flight'}); the first part of\n *                // the scope is \"home\", the \"home\" will be checked whther it is in pages. the rest is not checked.\n *  }\n * }]\n * @returns\n */\nexport function factory(config = {}) {\n    const { ns = '$ns$', strict = false, template = {}, scopeSeparator = '/' } = config;\n    if(strict && !isSimpleObject(template)) {\n        throw new Error('when \"strict\" is true, template is needed. template is a simple object.');\n    }\n    const partialStoreKey = `${NAMESPACE_PREFIX}-${ns}`;\n    const store = {\n        /**\n         * set data in storage. the storage can be localStorage, sessionStorage, memoryStorage.\n         *\n         * @param {*} [opts={\n         *  type: store.types.localStorage, // which type storage to store data. one of: store.types.localStorage, store.types.sessionStorage, store.types.memoryStorage\n         *  scope: 'homePage/flightPart', // if scope is \"global\", the key will be checked if it is defined in globalKeys. if it is normal scope. for example: 'home/flight', the first part \"home\"\n         *                                 // will be check if it is defined in pages while you set strict to be true.\n         *  key: 'city', // store key\n         *  value: 'beijing' // store value\n         * }]\n         */\n        setItem(key = '', value, opts = {}) {\n            const { type = DEFAULT_STORAGE_TYPE, scope = '', errCallBack = noop } = opts;\n            checkParams({type});\n            const { page = DEFAULT_PAGE, itemKey } = getPageAndItemKey(scope, key, scopeSeparator);\n            strictCheck(strict, template, page, itemKey);\n            const storeKey = `${partialStoreKey}-${page}`;\n            storage.setItem(type, storeKey, itemKey, value, errCallBack);\n        },\n        /**\n         * get data from storage\n         *\n         * @param {*} [opts={\n         *  type: store.types.sessionStorage,\n         *  scope: 'global',\n         *  key: 'city'\n         * }]\n         * @returns\n         */\n        getItem(key = '', opts = {}) {\n            const { type = DEFAULT_STORAGE_TYPE, scope = '', defaultValue } = opts;\n            checkParams({type});\n            const { page = DEFAULT_PAGE, itemKey } = getPageAndItemKey(scope, key, scopeSeparator);\n            strictCheck(strict, template, page, itemKey);\n            const storeKey = `${partialStoreKey}-${page}`;\n            const value =  storage.getItem(type, storeKey, itemKey);\n            if (typeof defaultValue === 'function') {\n                defaultValue = defaultValue();\n            }\n            const returnValue = (value === void 0 || value === null) ? defaultValue : value;\n            return returnValue;\n        },\n\n        /**\n         * remove item from storage.\n         *\n         * @param {*} key\n         * @param {*} [opts={}]\n         */\n        removeItem(key, opts = {}) {\n            const { type = DEFAULT_STORAGE_TYPE, scope = '' } = opts;\n            checkParams({type});\n            const { page = DEFAULT_PAGE, itemKey } = getPageAndItemKey(scope, key, scopeSeparator);\n            strictCheck(strict, template, page, itemKey);\n            const storeKey = `${partialStoreKey}-${page}`;\n            store.removeItem(type, storeKey, itemKey);\n        },\n\n        /**\n         * clear one page data from storage.\n         *\n         * @param {*} [opts={}]\n         */\n        clear(opts = {}) {\n            const key = '';\n            const { type = DEFAULT_STORAGE_TYPE, scope = '' } = opts;\n            checkParams({type});\n            const { page = DEFAULT_PAGE, itemKey } = getPageAndItemKey(scope, key, scopeSeparator);\n            strictCheck(strict, template, page, itemKey);\n            const storeKey = `${partialStoreKey}-${page}`;\n            store.clear(type, storeKey);\n        },\n        types: storagesMap\n    };\n    return store;\n}\n\nconst store = factory();\n\nexport default store;\n\n"],"sourceRoot":""}